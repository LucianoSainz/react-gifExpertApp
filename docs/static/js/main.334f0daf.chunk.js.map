{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB5C,OACI,sBAAMC,SAZU,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOd,SAEA,uBACMO,KAAM,OACNC,MAAOT,EACPU,SArBc,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,QAqBdG,YAAY,yC,+BCvBbC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCHPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKc,UAAU,yCAAf,UACA,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EAEXf,mBAAS,CAC/BsB,KAAK,GACLa,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAqBtC,OAdAC,qBAAU,WAETxB,EAAQC,GACFwB,MAAK,SAAAC,GACCH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAMtB,CAACpB,IAEGqB,EDlByBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAGpB,OACI,qCACA,oBAAIJ,UAAU,+CAAd,SAA8DhB,IAC/DoB,GAAW,mBAAGJ,UAAU,yCAAb,wBAEV,qBAAKA,UAAU,YAAf,SAIIH,EAAOJ,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEmBXgB,EAlCM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,gBAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KASvB,OACI,qCACJ,qBAAKgC,UAAU,OAAf,SACA,oBAAIA,UAAU,WAAd,4BAEA,cAAC,EAAD,CAAahC,cAAeA,IAE5B,uBAGA,6BAEQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCtBtB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.334f0daf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleImputChange = (e) => {\r\n     setInputValue(e.target.value)\r\n  }\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if(inputValue.trim().length > 2){\r\n        setCategories(cats => [inputValue, ...cats ]);\r\n        setInputValue('');\r\n      } \r\n\r\n      \r\n   }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n         \r\n        <input\r\n              type =\"text\"\r\n              value={inputValue}\r\n              onChange={handleImputChange}\r\n              placeholder='Search all the Gifs and Stickers '\r\n              />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n\r\n\r\n\r\nexport const getGifs = async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=xZqjzOtIfIbFdfntiMGbBLjv2zWxt4Xi`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n  \r\n}","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n\r\n    return(\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n        <img src={url} alt={title} />\r\n        <p>{title}</p>        \r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n        \r\n    return(\r\n        <>\r\n        <h3 className=\" title animate__animated animate__backInLeft\">{category}</h3>\r\n      {loading && <p className=\" load animate__animated animate__flash\">Loading...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n        \r\n        \r\n            {\r\n            images.map( img => (\r\n                 <GifGridItem \r\n                 key={img.id}\r\n                 {...img} \r\n                 />\r\n               ))\r\n            }\r\n        \r\n        </div>\r\n     </>\r\n    )\r\n}","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n   useEffect(() => {\r\n\r\n    getGifs(category)\r\n         .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n   \r\n                });\r\n             \r\n         })\r\n\r\n   }, [category]);\r\n\r\n   return state;\r\n}","import React, { useState } from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    //const handleAdd = () =>{\r\n        //setCategories([...categories, 'hunterXHunter']);\r\n        //setCategories(cats => [...cats, 'HunterXHunter']);\r\n    //}\r\n\r\n    return(\r\n        <>\r\n    <div className=\"back\">\r\n    <h2 className='titleOne'>GifExpertApp</h2>\r\n    </div>\r\n    <AddCategory setCategories={setCategories}/>\r\n    \r\n    <hr />\r\n\r\n    \r\n    <ol>\r\n        {\r\n            categories.map(category => (\r\n                 <GifGrid \r\n                 key={category}\r\n                 category={category} />\r\n                 ))\r\n            }\r\n        \r\n    </ol>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}